import React, { useState, useRef } from 'react';
import { parseFileContent } from '../../../shared';
import styles from './file-upload.module.scss';

export const FileUpload = ({ onFileUpload }) => {
  const [fileInfo, setFileInfo] = useState(null);
  const [isDragOver, setIsDragOver] = useState(false);
  const fileInputRef = useRef(null);

  const handleFileSelect = (file) => {
    if (!file) return;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    setFileInfo({
      name: file.name,
      size: (file.size / 1024).toFixed(2) + ' KB',
      type: file.type || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π',
      lastModified: new Date(file.lastModified).toLocaleString()
    });

    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    const reader = new FileReader();
    reader.onload = (e) => {
      try {
        const tickers = parseFileContent(e.target.result, file.name);
        onFileUpload(tickers);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', error);
      }
    };
    reader.readAsText(file);
  };

  const handleDragOver = (e) => {
    e.preventDefault();
    setIsDragOver(true);
  };

  const handleDragLeave = (e) => {
    e.preventDefault();
    setIsDragOver(false);
  };

  const handleDrop = (e) => {
    e.preventDefault();
    setIsDragOver(false);
    
    const files = e.dataTransfer.files;
    if (files.length > 0) {
      handleFileSelect(files[0]);
    }
  };

  const handleFileInputChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      handleFileSelect(file);
    }
  };

  return (
    <div>
      <div 
        className={`${styles.fileUploadSection} ${isDragOver ? styles.dragover : ''}`}
        onDragOver={handleDragOver}
        onDragLeave={handleDragLeave}
        onDrop={handleDrop}
      >
        <h3>üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å —Ç–∏–∫–µ—Ä–∞–º–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏</h3>
        <p>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JSON, CSV, TXT</p>
        
        <input 
          ref={fileInputRef}
          type="file" 
          className={styles.fileInput}
          accept=".json,.csv,.txt"
          onChange={handleFileInputChange}
        />
        
        <button 
          className={styles.fileUploadBtn}
          onClick={() => fileInputRef.current?.click()}
        >
          üìÇ –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
        </button>
        
        <div>–∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞</div>
      </div>

      {fileInfo && (
        <div className={`${styles.fileInfo} ${styles.show}`}>
          <h4>üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ:</h4>
          <div>
            <strong>–ò–º—è:</strong> {fileInfo.name}<br/>
            <strong>–†–∞–∑–º–µ—Ä:</strong> {fileInfo.size}<br/>
            <strong>–¢–∏–ø:</strong> {fileInfo.type}<br/>
            <strong>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ:</strong> {fileInfo.lastModified}
          </div>
        </div>
      )}
    </div>
  );
};
